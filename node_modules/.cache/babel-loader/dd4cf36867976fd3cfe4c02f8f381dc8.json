{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst fetchReposAction = createAsyncThunk(\"repos/list\", async (data, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  try {\n    const res = await axios.get(`https://api.github.com/users/${user}?client_id=${this.client_id}&client_secret=${this.client_secret}`);\n  } catch (error) {}\n});\nconst reposSlices = createSlice({\n  name: \"repos\",\n  initialState: {},\n  extraReducers: builder => {\n    builder.addCase(fetchReposAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchReposAction.fulfilled, (state, action) => {\n      state.reposList = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n    });\n    builder.addCase(fetchReposAction.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default reposSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/guide/githubfinder/src/redux/slices/reposSlice.js"],"names":["createAsyncThunk","createSlice","axios","fetchReposAction","data","rejectWithValue","getState","dispatch","res","get","user","client_id","client_secret","error","reposSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","reposList","payload","rejected","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAGH,gBAAgB,CACvC,YADuC,EAEvC,OAAOI,IAAP,EAAa;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAb,KAAyD;AACvD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CACf,gCAA+BC,IAAK,cAAa,KAAKC,SAAU,kBAAiB,KAAKC,aAAc,EADrF,CAAlB;AAGD,GAJD,CAIE,OAAOC,KAAP,EAAc,CAAE;AACnB,CARsC,CAAzC;AAWA,MAAMC,WAAW,GAAGb,WAAW,CAAC;AAC9Bc,EAAAA,IAAI,EAAE,OADwB;AAE9BC,EAAAA,YAAY,EAAE,EAFgB;AAG9BC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,gBAAgB,CAACiB,OAAjC,EAA0C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,IAAhB;AACD,KAFD;AAGAL,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,gBAAgB,CAACqB,SAAjC,EAA4C,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7DD,MAAAA,KAAK,CAACI,SAAN,GAAkBH,MAAlB,aAAkBA,MAAlB,uBAAkBA,MAAM,CAAEI,OAA1B;AACAL,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,gBAAgB,CAACwB,QAAjC,EAA2C,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC5DD,MAAAA,KAAK,CAACE,OAAN,GAAgB,KAAhB;AACAF,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACI,OAArB;AACD,KAHD;AAID;AAf6B,CAAD,CAA/B;AAkBA,eAAeZ,WAAW,CAACc,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst fetchReposAction = createAsyncThunk(\n  \"repos/list\",\n  async (data, { rejectWithValue, getState, dispatch }) => {\n    try {\n      const res = await axios.get(\n        `https://api.github.com/users/${user}?client_id=${this.client_id}&client_secret=${this.client_secret}`\n      );\n    } catch (error) {}\n  }\n);\n\nconst reposSlices = createSlice({\n  name: \"repos\",\n  initialState: {},\n  extraReducers: builder => {\n    builder.addCase(fetchReposAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchReposAction.fulfilled, (state, action) => {\n      state.reposList = action?.payload;\n      state.loading = false;\n    });\n    builder.addCase(fetchReposAction.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  },\n});\n\nexport default reposSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}