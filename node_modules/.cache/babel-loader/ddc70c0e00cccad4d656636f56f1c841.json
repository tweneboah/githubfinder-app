{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst client_id = \"e46d40a2647a8388c2f5\";\nconst client_secret = \"79b90a1877131c334f913d5665f308cdab863304\";\nconst user = \"tweneboah\";\nexport const fetchReposAction = createAsyncThunk(\"repos/list\", async (user, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  try {\n    const {\n      data\n    } = await axios.get(`https://api.github.com/users/${user}/repos?${client_id}&client_secret=${client_secret}`);\n    return data;\n  } catch (error) {}\n});\nexport const fetchProfileAction = createAsyncThunk(\"profile/list\", async (data, {\n  rejectWithValue,\n  getState,\n  dispatch\n}) => {\n  try {\n    const data = await axios.get(`https://api.github.com/users/tweneboah&client_id=${client_id}&client_secret=${client_secret}`);\n    return data;\n  } catch (error) {}\n});\nconst reposSlices = createSlice({\n  name: \"repos\",\n  initialState: {},\n  extraReducers: builder => {\n    builder.addCase(fetchReposAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchReposAction.fulfilled, (state, action) => {\n      console.log(action);\n      state.reposList = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n    });\n    builder.addCase(fetchReposAction.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n    builder.addCase(fetchProfileAction.pending, (state, action) => {\n      state.profileLoading = true;\n    });\n    builder.addCase(fetchProfileAction.fulfilled, (state, action) => {\n      console.log(action);\n      state.profile = action === null || action === void 0 ? void 0 : action.payload;\n      state.profileLoading = false;\n    });\n    builder.addCase(fetchProfileAction.rejected, (state, action) => {\n      state.profileLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default reposSlices.reducer;","map":{"version":3,"sources":["/Users/inovotek/programming/youtube/guide/githubfinder/src/redux/slices/reposSlice.js"],"names":["createAsyncThunk","createSlice","axios","client_id","client_secret","user","fetchReposAction","rejectWithValue","getState","dispatch","data","get","error","fetchProfileAction","reposSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","console","log","reposList","payload","rejected","profileLoading","profile","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst client_id = \"e46d40a2647a8388c2f5\";\nconst client_secret = \"79b90a1877131c334f913d5665f308cdab863304\";\nconst user = \"tweneboah\";\nexport const fetchReposAction = createAsyncThunk(\n  \"repos/list\",\n  async (user, { rejectWithValue, getState, dispatch }) => {\n    try {\n      const { data } = await axios.get(\n        `https://api.github.com/users/${user}/repos?${client_id}&client_secret=${client_secret}`\n      );\n\n      return data;\n    } catch (error) {}\n  }\n);\n\nexport const fetchProfileAction = createAsyncThunk(\n  \"profile/list\",\n  async (data, { rejectWithValue, getState, dispatch }) => {\n    try {\n      const data = await axios.get(\n        `https://api.github.com/users/tweneboah&client_id=${client_id}&client_secret=${client_secret}`\n      );\n\n      return data;\n    } catch (error) {}\n  }\n);\n\nconst reposSlices = createSlice({\n  name: \"repos\",\n  initialState: {},\n  extraReducers: builder => {\n    builder.addCase(fetchReposAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchReposAction.fulfilled, (state, action) => {\n      console.log(action);\n      state.reposList = action?.payload;\n      state.loading = false;\n    });\n    builder.addCase(fetchReposAction.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n    builder.addCase(fetchProfileAction.pending, (state, action) => {\n      state.profileLoading = true;\n    });\n    builder.addCase(fetchProfileAction.fulfilled, (state, action) => {\n      console.log(action);\n      state.profile = action?.payload;\n      state.profileLoading = false;\n    });\n    builder.addCase(fetchProfileAction.rejected, (state, action) => {\n      state.profileLoading = false;\n      state.error = action.payload;\n    });\n  },\n});\n\nexport default reposSlices.reducer;\n"]},"metadata":{},"sourceType":"module"}